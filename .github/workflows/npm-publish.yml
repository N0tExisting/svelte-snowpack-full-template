# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages
name: Publish Node.js Package

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0
        with:
          # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
          node-version: 14.x
          # Used to specify a package manager for caching in the default directory. Supported values: npm, yarn
          cache: yarn

      - name: Setup
        run: |
          chmod +x Setup.sh
          ./Setup.sh

      - name: Build
        run: yarn --emoji true pack

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          # Artifact name
          name: release-tarball
          # A file, directory or wildcard pattern that describes what to upload
          path: ./svelte-snowpack-full-*.tgz

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@master
        with:
          path: ./package.json

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{steps.package-version.outputs.current-version}}
          release_name: svelte-snowpack-full-v${{steps.package-version.outputs.current-version}}
          draft: true
          prerelease: true

      - name: Upload Release Asset 1
        id: upload-release-asset-1
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object,
          # which include a `upload_url`. See this blog post for more info:
          # https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./svelte-snowpack-full-*.tgz
          asset_name: svelte-snowpack-full-v${{steps.package-version.outputs.current-version}}.tgz

  publish-npm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org/

      - name: Setup
        run: |
          chmod +x ./Setup.sh
          ./Setup.sh

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}

  publish-gpr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14.x
          registry-url: https://npm.pkg.github.com/

      - name: Setup
        run: |
          chmod +x ./Setup.sh
          ./Setup.sh

      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
